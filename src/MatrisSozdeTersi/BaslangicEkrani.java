/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MatrisSozdeTersi;

import java.util.Random;
import javax.swing.JOptionPane;

public class BaslangicEkrani extends javax.swing.JFrame {

    Double[][] matris = new Double[5][5]; //Matris Oluşturma
    int rastgeleormanual;
    static int toplama_sayisi = 0;
    static int carpma_sayisi = 0;

    public BaslangicEkrani() {
        initComponents();
        jTextField26.setVisible(false);
        jButton1.setVisible(false);
        jLabel4.setVisible(false);
        kareleriKapatma();
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jButton3.setVisible(false);
        jLabel7.setVisible(false);
        jLabel8.setVisible(false);
        jButton4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jTextField26 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField0_0 = new javax.swing.JTextField();
        jTextField0_1 = new javax.swing.JTextField();
        jTextField0_2 = new javax.swing.JTextField();
        jTextField0_3 = new javax.swing.JTextField();
        jTextField0_4 = new javax.swing.JTextField();
        jTextField1_0 = new javax.swing.JTextField();
        jTextField1_1 = new javax.swing.JTextField();
        jTextField1_2 = new javax.swing.JTextField();
        jTextField1_3 = new javax.swing.JTextField();
        jTextField1_4 = new javax.swing.JTextField();
        jTextField2_0 = new javax.swing.JTextField();
        jTextField2_1 = new javax.swing.JTextField();
        jTextField2_2 = new javax.swing.JTextField();
        jTextField2_3 = new javax.swing.JTextField();
        jTextField2_4 = new javax.swing.JTextField();
        jTextField3_0 = new javax.swing.JTextField();
        jTextField3_1 = new javax.swing.JTextField();
        jTextField3_2 = new javax.swing.JTextField();
        jTextField3_3 = new javax.swing.JTextField();
        jTextField3_4 = new javax.swing.JTextField();
        jTextField4_0 = new javax.swing.JTextField();
        jTextField4_1 = new javax.swing.JTextField();
        jTextField4_2 = new javax.swing.JTextField();
        jTextField4_3 = new javax.swing.JTextField();
        jTextField4_4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Başlangıç Ekrani");
        setBackground(new java.awt.Color(51, 255, 204));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("KARE OLMAYAN MATRİSİN SÖZDE TERSİNİ BULMA UYGULAMASINA HOŞGELDİNİZ");

        jRadioButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jRadioButton1.setText("RASTGELE");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("BİLGİSAYAR TARAFINDAN");

        jLabel3.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("KULLANICI TARAFINDAN");

        jRadioButton3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jRadioButton3.setText("MANUEL");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        jButton1.setText("ONAY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField26.setText("                    ");
        jTextField26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField26ActionPerformed(evt);
            }
        });

        jLabel5.setText("Satir Sayisi:");

        jLabel6.setText("Sutun Sayisi:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setText("MATRİS");

        jLabel7.setText("1-5 ARASINDA DEĞER GİRİNİZ");

        jButton3.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        jButton3.setText("ONAY");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField0_0.setText("      ");
        jTextField0_0.setPreferredSize(new java.awt.Dimension(30, 20));

        jTextField0_1.setText("      ");
        jTextField0_1.setPreferredSize(new java.awt.Dimension(30, 20));

        jTextField0_2.setText("      ");

        jTextField0_3.setText("      ");

        jTextField0_4.setText("      ");

        jTextField1_0.setText("      ");

        jTextField1_1.setText("      ");

        jTextField1_2.setText("      ");

        jTextField1_3.setText("      ");

        jTextField1_4.setText("      ");

        jTextField2_0.setText("      ");
        jTextField2_0.setPreferredSize(new java.awt.Dimension(30, 20));

        jTextField2_1.setText("      ");

        jTextField2_2.setText("      ");

        jTextField2_3.setText("      ");

        jTextField2_4.setText("      ");

        jTextField3_0.setText("      ");

        jTextField3_1.setText("      ");

        jTextField3_2.setText("      ");

        jTextField3_3.setText("      ");

        jTextField3_4.setText("      ");

        jTextField4_0.setText("      ");

        jTextField4_1.setText("      ");

        jTextField4_2.setText("      ");

        jTextField4_3.setText("      ");

        jTextField4_4.setText("      ");

        jButton2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton2.setText("-TEKRAR SEÇİM-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("NOT : VİRGÜL KULLANMAYIN, SADECE NOKTA.");

        jButton4.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        jButton4.setText("ONAY");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4_0)
                                            .addComponent(jTextField3_0, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField2_0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField1_0)
                                            .addComponent(jTextField0_0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4_1)
                                            .addComponent(jTextField3_1)
                                            .addComponent(jTextField2_1)
                                            .addComponent(jTextField1_1)
                                            .addComponent(jTextField0_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4_2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                            .addComponent(jTextField3_2)
                                            .addComponent(jTextField2_2)
                                            .addComponent(jTextField1_2)
                                            .addComponent(jTextField0_2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4_3, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                            .addComponent(jTextField3_3)
                                            .addComponent(jTextField2_3)
                                            .addComponent(jTextField1_3)
                                            .addComponent(jTextField0_3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField0_4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                            .addComponent(jTextField1_4)
                                            .addComponent(jTextField2_4)
                                            .addComponent(jTextField3_4)
                                            .addComponent(jTextField4_4)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(0, 193, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(jRadioButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(262, 262, 262)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(23, 23, 23))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(29, 29, 29))
                                            .addComponent(jRadioButton3))
                                        .addGap(73, 73, 73))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField1)
                                        .addComponent(jTextField2))
                                    .addComponent(jLabel7)))
                            .addComponent(jLabel1))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(2, 2, 2)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField0_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField0_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField0_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField0_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField0_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)))
                .addComponent(jLabel8)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        int satir, sutun;
        Random rand = new Random();
        rastgeleormanual = 0;

        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jRadioButton3.setSelected(false);
        jTextField26.setVisible(true);
        jButton4.setVisible(true);
        kareleriAcma();
        jButton1.setVisible(false);

        satir = rand.nextInt(5) + 1;
        sutun = rand.nextInt(5) + 1;

        while (satir == sutun) {
            satir = rand.nextInt(5) + 1;
            sutun = rand.nextInt(5) + 1;
        }

        for (int i = 0; i < satir; i++) {
            for (int j = 0; j < sutun; j++) {
                double random = Math.random() * 9 + 1;
                String str = String.format("%1.1f", random);
                random = Double.valueOf(str);
                matris[i][j] = random; //Matris Deger Verme
            }
        }

        ozelKapatma(satir, sutun);
        matrisGosterme(matris);

        jTextField26.setVisible(true);
        jTextField26.setText(" " + satir + " " + "x" + " " + sutun + " ");
        jTextField26.setEnabled(false);
        jLabel4.setText("boyut");
        jLabel4.setVisible(true);

        erisimIzniKapama();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    public void kareleriKapatma() {
        jTextField0_0.setVisible(false);
        jTextField0_1.setVisible(false);
        jTextField0_2.setVisible(false);
        jTextField0_3.setVisible(false);
        jTextField0_4.setVisible(false);

        jTextField1_0.setVisible(false);
        jTextField1_1.setVisible(false);
        jTextField1_2.setVisible(false);
        jTextField1_3.setVisible(false);
        jTextField1_4.setVisible(false);

        jTextField2_0.setVisible(false);
        jTextField2_1.setVisible(false);
        jTextField2_2.setVisible(false);
        jTextField2_3.setVisible(false);
        jTextField2_4.setVisible(false);

        jTextField3_0.setVisible(false);
        jTextField3_1.setVisible(false);
        jTextField3_2.setVisible(false);
        jTextField3_3.setVisible(false);
        jTextField3_4.setVisible(false);

        jTextField4_0.setVisible(false);
        jTextField4_1.setVisible(false);
        jTextField4_2.setVisible(false);
        jTextField4_3.setVisible(false);
        jTextField4_4.setVisible(false);
    }

    public void kareleriAcma() {
        jTextField0_0.setVisible(true);
        jTextField0_1.setVisible(true);
        jTextField0_2.setVisible(true);
        jTextField0_3.setVisible(true);
        jTextField0_4.setVisible(true);

        jTextField1_0.setVisible(true);
        jTextField1_1.setVisible(true);
        jTextField1_2.setVisible(true);
        jTextField1_3.setVisible(true);
        jTextField1_4.setVisible(true);

        jTextField2_0.setVisible(true);
        jTextField2_1.setVisible(true);
        jTextField2_2.setVisible(true);
        jTextField2_3.setVisible(true);
        jTextField2_4.setVisible(true);

        jTextField3_0.setVisible(true);
        jTextField3_1.setVisible(true);
        jTextField3_2.setVisible(true);
        jTextField3_3.setVisible(true);
        jTextField3_4.setVisible(true);

        jTextField4_0.setVisible(true);
        jTextField4_1.setVisible(true);
        jTextField4_2.setVisible(true);
        jTextField4_3.setVisible(true);
        jTextField4_4.setVisible(true);
    }

    public void ozelKapatma(int satir, int sutun) {
        if (satir < 5) {
            jTextField4_0.setVisible(false);
            jTextField4_1.setVisible(false);
            jTextField4_2.setVisible(false);
            jTextField4_3.setVisible(false);
            jTextField4_4.setVisible(false);
        }
        if (satir < 4) {
            jTextField3_0.setVisible(false);
            jTextField3_1.setVisible(false);
            jTextField3_2.setVisible(false);
            jTextField3_3.setVisible(false);
            jTextField3_4.setVisible(false);
        }
        if (satir < 3) {
            jTextField2_0.setVisible(false);
            jTextField2_1.setVisible(false);
            jTextField2_2.setVisible(false);
            jTextField2_3.setVisible(false);
            jTextField2_4.setVisible(false);
        }
        if (satir < 2) {
            jTextField1_0.setVisible(false);
            jTextField1_1.setVisible(false);
            jTextField1_2.setVisible(false);
            jTextField1_3.setVisible(false);
            jTextField1_4.setVisible(false);
        }
        ///////////////////////////////
        if (sutun < 5) {
            jTextField0_4.setVisible(false);
            jTextField1_4.setVisible(false);
            jTextField2_4.setVisible(false);
            jTextField3_4.setVisible(false);
            jTextField4_4.setVisible(false);
        }
        if (sutun < 4) {
            jTextField0_3.setVisible(false);
            jTextField1_3.setVisible(false);
            jTextField2_3.setVisible(false);
            jTextField3_3.setVisible(false);
            jTextField4_3.setVisible(false);
        }
        if (sutun < 3) {
            jTextField0_2.setVisible(false);
            jTextField1_2.setVisible(false);
            jTextField2_2.setVisible(false);
            jTextField3_2.setVisible(false);
            jTextField4_2.setVisible(false);
        }
        if (sutun < 2) {
            jTextField0_1.setVisible(false);
            jTextField1_1.setVisible(false);
            jTextField2_1.setVisible(false);
            jTextField3_1.setVisible(false);
            jTextField4_1.setVisible(false);
        }
    }

    public void matrisGosterme(Double[][] matris) {
        if (matris[0][0] != null) {
            jTextField0_0.setText(matris[0][0].toString());
        }
        if (matris[0][1] != null) {
            jTextField0_1.setText(matris[0][1].toString());
        }
        if (matris[0][2] != null) {
            jTextField0_2.setText(matris[0][2].toString());
        }
        if (matris[0][3] != null) {
            jTextField0_3.setText(matris[0][3].toString());
        }
        if (matris[0][4] != null) {
            jTextField0_4.setText(matris[0][4].toString());
        }
        if (matris[1][0] != null) {
            jTextField1_0.setText(matris[1][0].toString());
        }
        if (matris[1][1] != null) {
            jTextField1_1.setText(matris[1][1].toString());
        }
        if (matris[1][2] != null) {
            jTextField1_2.setText(matris[1][2].toString());
        }
        if (matris[1][3] != null) {
            jTextField1_3.setText(matris[1][3].toString());
        }
        if (matris[1][4] != null) {
            jTextField1_4.setText(matris[1][4].toString());
        }
        if (matris[2][0] != null) {
            jTextField2_0.setText(matris[2][0].toString());
        }
        if (matris[2][1] != null) {
            jTextField2_1.setText(matris[2][1].toString());
        }
        if (matris[2][2] != null) {
            jTextField2_2.setText(matris[2][2].toString());
        }
        if (matris[2][3] != null) {
            jTextField2_3.setText(matris[2][3].toString());
        }
        if (matris[2][4] != null) {
            jTextField2_4.setText(matris[2][4].toString());
        }
        if (matris[3][0] != null) {
            jTextField3_0.setText(matris[3][0].toString());
        }
        if (matris[3][1] != null) {
            jTextField3_1.setText(matris[3][1].toString());
        }
        if (matris[3][2] != null) {
            jTextField3_2.setText(matris[3][2].toString());
        }
        if (matris[3][3] != null) {
            jTextField3_3.setText(matris[3][3].toString());
        }
        if (matris[3][4] != null) {
            jTextField3_4.setText(matris[3][4].toString());
        }
        if (matris[4][0] != null) {
            jTextField4_0.setText(matris[4][0].toString());
        }
        if (matris[4][1] != null) {
            jTextField4_1.setText(matris[4][1].toString());
        }
        if (matris[4][2] != null) {
            jTextField4_2.setText(matris[4][2].toString());
        }
        if (matris[4][3] != null) {
            jTextField4_3.setText(matris[4][3].toString());
        }
        if (matris[4][4] != null) {
            jTextField4_4.setText(matris[4][4].toString());
        }
    }

    public void erisimIzniKapama() {
        jTextField0_0.setEnabled(false);
        jTextField0_1.setEnabled(false);
        jTextField0_2.setEnabled(false);
        jTextField0_3.setEnabled(false);
        jTextField0_4.setEnabled(false);

        jTextField1_0.setEnabled(false);
        jTextField1_1.setEnabled(false);
        jTextField1_2.setEnabled(false);
        jTextField1_3.setEnabled(false);
        jTextField1_4.setEnabled(false);

        jTextField2_0.setEnabled(false);
        jTextField2_1.setEnabled(false);
        jTextField2_2.setEnabled(false);
        jTextField2_3.setEnabled(false);
        jTextField2_4.setEnabled(false);

        jTextField3_0.setEnabled(false);
        jTextField3_1.setEnabled(false);
        jTextField3_2.setEnabled(false);
        jTextField3_3.setEnabled(false);
        jTextField3_4.setEnabled(false);

        jTextField4_0.setEnabled(false);
        jTextField4_1.setEnabled(false);
        jTextField4_2.setEnabled(false);
        jTextField4_3.setEnabled(false);
        jTextField4_4.setEnabled(false);
    }

    public void erisimIzniAcma() {
        jTextField0_0.setEnabled(true);
        jTextField0_1.setEnabled(true);
        jTextField0_2.setEnabled(true);
        jTextField0_3.setEnabled(true);
        jTextField0_4.setEnabled(true);

        jTextField1_0.setEnabled(true);
        jTextField1_1.setEnabled(true);
        jTextField1_2.setEnabled(true);
        jTextField1_3.setEnabled(true);
        jTextField1_4.setEnabled(true);

        jTextField2_0.setEnabled(true);
        jTextField2_1.setEnabled(true);
        jTextField2_2.setEnabled(true);
        jTextField2_3.setEnabled(true);
        jTextField2_4.setEnabled(true);

        jTextField3_0.setEnabled(true);
        jTextField3_1.setEnabled(true);
        jTextField3_2.setEnabled(true);
        jTextField3_3.setEnabled(true);
        jTextField3_4.setEnabled(true);

        jTextField4_0.setEnabled(true);
        jTextField4_1.setEnabled(true);
        jTextField4_2.setEnabled(true);
        jTextField4_3.setEnabled(true);
        jTextField4_4.setEnabled(true);
    }

    public boolean kontrol() {
        boolean qontrol = true;
        int kontrol = 0;

        if (jTextField1.getText().trim().equals("1") == true) {
            kontrol++;
        }
        if (jTextField1.getText().trim().equals("2") == true) {
            kontrol++;
        }
        if (jTextField1.getText().trim().equals("3") == true) {
            kontrol++;
        }
        if (jTextField1.getText().trim().equals("4") == true) {
            kontrol++;
        }
        if (jTextField1.getText().trim().equals("5") == true) {
            kontrol++;
        }

        if (kontrol == 0) {
            JOptionPane.showMessageDialog(null, "Lütfen 1-5 arasında deger giriniz.");
        }
//////////////////////////////////////////////////////////////////////////////////////

        int control = 0;

        if (jTextField2.getText().trim().equals("1") == true) {
            control++;
        }
        if (jTextField2.getText().trim().equals("2") == true) {
            control++;
        }
        if (jTextField2.getText().trim().equals("3") == true) {
            control++;
        }
        if (jTextField2.getText().trim().equals("4") == true) {
            control++;
        }
        if (jTextField2.getText().trim().equals("5") == true) {
            control++;
        }

        if (control == 0) {
            JOptionPane.showMessageDialog(null, "Lütfen 1-5 arasında deger giriniz.");
            qontrol = false;
        } else if (jTextField1.getText().trim().equals(jTextField2.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Matris boyutları esit olamaz.");
            qontrol = false;
        }
        return qontrol;
    }

    public boolean sayiKontrol() {
        if (jTextField0_0.getText().trim().isEmpty() == false && doubleKontrol(jTextField0_0.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [0][0] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField0_1.getText().trim().isEmpty() == false && doubleKontrol(jTextField0_1.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [0][1] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField0_2.getText().trim().isEmpty() == false && doubleKontrol(jTextField0_2.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [0][2] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField0_3.getText().trim().isEmpty() == false && doubleKontrol(jTextField0_3.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [0][3] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField0_4.getText().trim().isEmpty() == false && doubleKontrol(jTextField0_4.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [0][4] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } //////////////////////////////////////////////////////////////////////
        else if (jTextField1_0.getText().trim().isEmpty() == false && doubleKontrol(jTextField1_0.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [1][0] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField1_1.getText().trim().isEmpty() == false && doubleKontrol(jTextField1_1.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [1][1] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField1_2.getText().trim().isEmpty() == false && doubleKontrol(jTextField1_2.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [1][2] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField1_3.getText().trim().isEmpty() == false && doubleKontrol(jTextField1_3.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [1][3] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField1_4.getText().trim().isEmpty() == false && doubleKontrol(jTextField1_4.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [1][4] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } //////////////////////////////////////////////////////////////////////
        else if (jTextField2_0.getText().trim().isEmpty() == false && doubleKontrol(jTextField2_0.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [2][0] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField2_1.getText().trim().isEmpty() == false && doubleKontrol(jTextField2_1.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [2][1] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField2_2.getText().trim().isEmpty() == false && doubleKontrol(jTextField2_2.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [2][2] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField2_3.getText().trim().isEmpty() == false && doubleKontrol(jTextField2_3.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [2][3] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField2_4.getText().trim().isEmpty() == false && doubleKontrol(jTextField2_4.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [2][4] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } /////////////////////////////////////////////////////////////////////
        else if (jTextField3_0.getText().trim().isEmpty() == false && doubleKontrol(jTextField3_0.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [3][0] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField3_1.getText().trim().isEmpty() == false && doubleKontrol(jTextField3_1.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [3][1] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField3_2.getText().trim().isEmpty() == false && doubleKontrol(jTextField3_2.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [3][2] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField3_3.getText().trim().isEmpty() == false && doubleKontrol(jTextField3_3.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [3][3] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField3_4.getText().trim().isEmpty() == false && doubleKontrol(jTextField3_4.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [3][4] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } ////////////////////////////////////////////////////////////////////
        else if (jTextField4_0.getText().trim().isEmpty() == false && doubleKontrol(jTextField4_0.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [4][0] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField4_1.getText().trim().isEmpty() == false && doubleKontrol(jTextField4_1.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [4][1] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField4_2.getText().trim().isEmpty() == false && doubleKontrol(jTextField4_2.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [4][2] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField4_3.getText().trim().isEmpty() == false && doubleKontrol(jTextField4_3.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [4][3] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        } else if (jTextField4_4.getText().trim().isEmpty() == false && doubleKontrol(jTextField4_4.getText().trim()) == false) {
            JOptionPane.showMessageDialog(null, "Lütfen [4][4] index' i icin duzgun degerler giriniz. (0-9 arasında)");
            return false;
        }

        return true;
    }

    public static boolean doubleKontrol(String code) {
        try {
            Double.parseDouble(code);
        } catch (NumberFormatException numberFormatException) {
            return false;
        }
        return true;
    }

    public boolean sayiAralikKontrol(String s, int satir, int sutun) {
        Double d;
        d = Double.parseDouble(s);
        if (d < 1 || d >= 10) {
            JOptionPane.showMessageDialog(null, "Lütfen 1-9 arasında girin.HATA:" + "[" + satir + "]" + "[" + sutun + "]");
            return false;
        }
        if (sayiBasamakKontrol(s, satir, sutun) == false) {
            return false;
        }
        return true;
    }

    public boolean sayiBasamakKontrol(String s, int satir, int sutun) {
        if (s.length() > 2) {
            if (s.charAt(1) == '.') {
                if (s.length() == 3) {
                    return true;
                } else {
                    JOptionPane.showMessageDialog(null, "Lütfen virgulden sonra tek basamak.HATA:" + "[" + satir + "]" + "[" + sutun + "]");
                    return false;
                }
            }
        }
        return true;
    }

    public static Double[][] matrisTranspozeBulma(Double[][] m, int satir, int sutun) {
        Double[][] temp = new Double[sutun][satir];
        for (int i = 0; i < satir; i++) {
            for (int j = 0; j < sutun; j++) {
                temp[j][i] = m[i][j];
            }
        }
        return temp;
    }

    public static double[][] matrisTersAlma(double a[][]) {
        int n = a.length;
        double x[][] = new double[n][n];
        double b[][] = new double[n][n];
        int index[] = new int[n];
        for (int i = 0; i < n; ++i) {
            b[i][i] = 1;
        }
        gaussian(a, index);
        for (int i = 0; i < n - 1; ++i) {
            for (int j = i + 1; j < n; ++j) {
                for (int k = 0; k < n; ++k) {
                    b[index[j]][k]
                            -= a[index[j]][i] * b[index[i]][k];
                    carpma_sayisi++;
                }
            }
        }
        for (int i = 0; i < n; ++i) {
            x[n - 1][i] = b[index[n - 1]][i] / a[index[n - 1]][n - 1];
            carpma_sayisi++;
            for (int j = n - 2; j >= 0; --j) {
                x[j][i] = b[index[j]][i];
                for (int k = j + 1; k < n; ++k) {
                    x[j][i] -= a[index[j]][k] * x[k][i];
                    carpma_sayisi++;
                    toplama_sayisi++;
                }
                x[j][i] /= a[index[j]][j];
                carpma_sayisi++;
            }
        }
        return x;
    }

    public static void gaussian(double a[][], int index[]) {
        int n = index.length;
        double c[] = new double[n];

        // Initialize the index
        for (int i = 0; i < n; ++i) {
            index[i] = i;
        }

        // Find the rescaling factors, one from each row
        for (int i = 0; i < n; ++i) {
            double c1 = 0;
            for (int j = 0; j < n; ++j) {
                double c0 = Math.abs(a[i][j]);
                if (c0 > c1) {
                    c1 = c0;
                }
            }
            c[i] = c1;
        }

        // Search the pivoting element from each column
        int k = 0;
        for (int j = 0; j < n - 1; ++j) {
            double pi1 = 0;
            for (int i = j; i < n; ++i) {
                double pi0 = Math.abs(a[index[i]][j]);
                pi0 /= c[index[i]];
                carpma_sayisi++;
                if (pi0 > pi1) {
                    pi1 = pi0;
                    k = i;
                }
            }

            // Interchange rows according to the pivoting order
            int itmp = index[j];
            index[j] = index[k];
            index[k] = itmp;
            for (int i = j + 1; i < n; ++i) {
                double pj = a[index[i]][j] / a[index[j]][j];
                carpma_sayisi++;

                // Record pivoting ratios below the diagonal
                a[index[i]][j] = pj;

                // Modify other elements accordingly
                for (int l = j + 1; l < n; ++l) {
                    a[index[i]][l] -= pj * a[index[j]][l];
                    carpma_sayisi++;
                    toplama_sayisi++;
                }
            }
        }
    }

    public static Double[][] multiplicar(Double[][] A, Double[][] B) {

        int aRows = A.length;
        int aColumns = A[0].length;
        int bRows = B.length;
        int bColumns = B[0].length;

        if (aColumns != bRows) {
            throw new IllegalArgumentException("A:Rows: " + aColumns + " did not match B:Columns " + bRows + ".");
        }

        Double[][] C = new Double[aRows][bColumns];
        for (int i = 0; i < aRows; i++) {
            for (int j = 0; j < bColumns; j++) {
                C[i][j] = 0.00000;
            }
        }

        for (int i = 0; i < aRows; i++) { // aRow
            for (int j = 0; j < bColumns; j++) { // bColumn
                for (int k = 0; k < aColumns; k++) { // aColumn
                    C[i][j] += A[i][k] * B[k][j];
                    carpma_sayisi++;
                    toplama_sayisi++;
                }
            }
        }

        return C;
    }

    public Double determinantBulma(Double[][] matris) {
        Double sonuc = 0.0;

        if (matris.length == 1) {
            sonuc = matris[0][0];
            return sonuc;
        }
        if (matris.length == 2) {
            sonuc = matris[0][0] * matris[1][1] - matris[0][1] * matris[1][0];
            toplama_sayisi++;
            carpma_sayisi++;
            carpma_sayisi++;
            return sonuc;
        }
        if (matris.length == 3) {
            for (int i = 0; i < matris[0].length; i++) {
                Double gecici[][] = new Double[matris.length - 1][matris[0].length - 1];

                for (int j = 1; j < matris.length; j++) {
                    for (int k = 0; k < matris[0].length; k++) {

                        if (k < i) {
                            gecici[j - 1][k] = matris[j][k];
                        } else if (k > i) {
                            gecici[j - 1][k - 1] = matris[j][k];
                        }

                    }
                }
                sonuc += matris[0][i] * Math.pow(-1, (int) i) * determinantBulma(gecici);
                toplama_sayisi++;
                carpma_sayisi++;
                carpma_sayisi++;
                carpma_sayisi++;
            }
            return sonuc;
        }
        if (matris.length == 4) {
            sonuc = (matris[0][0] * matris[1][1] * matris[2][2] * matris[3][3])
                    + (matris[0][0] * matris[1][2] * matris[2][3] * matris[3][1])
                    + (matris[0][0] * matris[1][3] * matris[2][1] * matris[3][2])
                    + (matris[0][1] * matris[1][0] * matris[2][3] * matris[3][2])
                    + (matris[0][1] * matris[1][2] * matris[2][0] * matris[3][3])
                    + (matris[0][1] * matris[1][3] * matris[2][2] * matris[3][0])
                    + (matris[0][2] * matris[1][0] * matris[2][1] * matris[3][3])
                    + (matris[0][2] * matris[1][1] * matris[2][3] * matris[3][0])
                    + (matris[0][2] * matris[1][3] * matris[2][0] * matris[3][1])
                    + (matris[0][3] * matris[1][0] * matris[2][2] * matris[3][1])
                    + (matris[0][3] * matris[1][1] * matris[2][0] * matris[3][2])
                    + (matris[0][3] * matris[1][2] * matris[2][1] * matris[3][0])
                    - (matris[0][0] * matris[1][1] * matris[2][3] * matris[3][2])
                    - (matris[0][0] * matris[1][2] * matris[2][1] * matris[3][3])
                    - (matris[0][0] * matris[1][3] * matris[2][2] * matris[3][1])
                    - (matris[0][1] * matris[1][0] * matris[2][2] * matris[3][3])
                    - (matris[0][1] * matris[1][2] * matris[2][3] * matris[3][0])
                    - (matris[0][1] * matris[1][3] * matris[2][0] * matris[3][2])
                    - (matris[0][2] * matris[1][0] * matris[2][3] * matris[3][1])
                    - (matris[0][2] * matris[1][1] * matris[2][0] * matris[3][3])
                    - (matris[0][2] * matris[1][3] * matris[2][1] * matris[3][0])
                    - (matris[0][3] * matris[1][0] * matris[2][1] * matris[3][2])
                    - (matris[0][3] * matris[1][1] * matris[2][2] * matris[3][0])
                    - (matris[0][3] * matris[1][2] * matris[2][0] * matris[3][1]);
            toplama_sayisi = toplama_sayisi + 23;
            carpma_sayisi = carpma_sayisi + 72;
            return sonuc;
        }
        if (matris.length == 5) {
            sonuc = (matris[0][0] * matris[1][1] * matris[2][2] * matris[3][3] * matris[4][4])
                    + (matris[0][0] * matris[1][1] * matris[2][3] * matris[3][4] * matris[4][2])
                    + (matris[0][0] * matris[1][1] * matris[2][4] * matris[3][2] * matris[4][3])
                    - (matris[0][0] * matris[1][1] * matris[2][4] * matris[3][3] * matris[4][2])
                    - (matris[0][0] * matris[1][1] * matris[2][3] * matris[3][2] * matris[4][4])
                    - (matris[0][0] * matris[1][1] * matris[2][2] * matris[3][4] * matris[4][3])
                    - (matris[0][0] * matris[2][1] * matris[1][2] * matris[3][3] * matris[4][4])
                    - (matris[0][0] * matris[2][1] * matris[1][3] * matris[3][4] * matris[4][2])
                    - (matris[0][0] * matris[2][1] * matris[1][4] * matris[3][2] * matris[4][3])
                    + (matris[0][0] * matris[2][1] * matris[1][4] * matris[3][3] * matris[4][2])
                    + (matris[0][0] * matris[2][1] * matris[1][3] * matris[3][2] * matris[4][4])
                    + (matris[0][0] * matris[2][1] * matris[1][2] * matris[3][4] * matris[4][3])
                    + (matris[0][0] * matris[3][1] * matris[1][2] * matris[2][3] * matris[4][4])
                    + (matris[0][0] * matris[3][1] * matris[1][3] * matris[2][4] * matris[4][2])
                    + (matris[0][0] * matris[3][1] * matris[1][4] * matris[2][2] * matris[4][3])
                    - (matris[0][0] * matris[3][1] * matris[1][4] * matris[2][3] * matris[4][2])
                    - (matris[0][0] * matris[3][1] * matris[1][3] * matris[2][2] * matris[4][4])
                    - (matris[0][0] * matris[3][1] * matris[1][2] * matris[2][4] * matris[4][3])
                    - (matris[0][0] * matris[4][1] * matris[1][2] * matris[2][3] * matris[3][4])
                    - (matris[0][0] * matris[4][1] * matris[1][3] * matris[2][4] * matris[3][2])
                    - (matris[0][0] * matris[4][1] * matris[1][4] * matris[2][2] * matris[3][3])
                    + (matris[0][0] * matris[4][1] * matris[1][4] * matris[2][3] * matris[3][2])
                    + (matris[0][0] * matris[4][1] * matris[1][3] * matris[2][2] * matris[3][4])
                    + (matris[0][0] * matris[4][1] * matris[1][2] * matris[2][4] * matris[3][3])
                    ////////////////////////////////////////////////////////////////////////////
                    - (matris[1][0] * matris[0][1] * matris[2][2] * matris[3][3] * matris[4][4])
                    - (matris[1][0] * matris[0][1] * matris[2][3] * matris[3][4] * matris[4][2])
                    - (matris[1][0] * matris[0][1] * matris[2][4] * matris[3][2] * matris[4][3])
                    + (matris[1][0] * matris[0][1] * matris[2][4] * matris[3][3] * matris[4][2])
                    + (matris[1][0] * matris[0][1] * matris[2][3] * matris[3][2] * matris[4][4])
                    + (matris[1][0] * matris[0][1] * matris[2][2] * matris[3][4] * matris[4][3])
                    + (matris[1][0] * matris[2][1] * matris[0][2] * matris[3][3] * matris[4][4])
                    + (matris[1][0] * matris[2][1] * matris[0][3] * matris[3][4] * matris[4][2])
                    + (matris[1][0] * matris[2][1] * matris[0][4] * matris[3][2] * matris[4][3])
                    - (matris[1][0] * matris[2][1] * matris[0][4] * matris[3][3] * matris[4][2])
                    - (matris[1][0] * matris[2][1] * matris[0][3] * matris[3][2] * matris[4][4])
                    - (matris[1][0] * matris[2][1] * matris[0][2] * matris[3][4] * matris[4][3])
                    - (matris[1][0] * matris[3][1] * matris[0][2] * matris[2][3] * matris[4][4])
                    - (matris[1][0] * matris[3][1] * matris[0][3] * matris[2][4] * matris[4][2])
                    - (matris[1][0] * matris[3][1] * matris[0][4] * matris[2][2] * matris[4][3])
                    + (matris[1][0] * matris[3][1] * matris[0][4] * matris[2][3] * matris[4][2])
                    + (matris[1][0] * matris[3][1] * matris[0][3] * matris[2][2] * matris[4][4])
                    + (matris[1][0] * matris[3][1] * matris[0][2] * matris[2][4] * matris[4][3])
                    + (matris[1][0] * matris[4][1] * matris[0][2] * matris[2][3] * matris[3][4])
                    + (matris[1][0] * matris[4][1] * matris[0][3] * matris[2][4] * matris[3][2])
                    + (matris[1][0] * matris[4][1] * matris[0][4] * matris[2][2] * matris[3][3])
                    - (matris[1][0] * matris[4][1] * matris[0][4] * matris[2][3] * matris[3][2])
                    - (matris[1][0] * matris[4][1] * matris[0][3] * matris[2][2] * matris[3][4])
                    - (matris[1][0] * matris[4][1] * matris[0][2] * matris[2][4] * matris[3][3])
                    ////////////////////////////////////////////////////////////////////////////
                    + (matris[2][0] * matris[0][1] * matris[1][2] * matris[3][3] * matris[4][4])
                    + (matris[2][0] * matris[0][1] * matris[1][3] * matris[3][4] * matris[4][2])
                    + (matris[2][0] * matris[0][1] * matris[1][4] * matris[3][2] * matris[4][3])
                    - (matris[2][0] * matris[0][1] * matris[1][4] * matris[3][3] * matris[4][2])
                    - (matris[2][0] * matris[0][1] * matris[1][3] * matris[3][2] * matris[4][4])
                    - (matris[2][0] * matris[0][1] * matris[1][2] * matris[3][4] * matris[4][3])
                    - (matris[2][0] * matris[1][1] * matris[0][2] * matris[3][3] * matris[4][4])
                    - (matris[2][0] * matris[1][1] * matris[0][3] * matris[3][4] * matris[4][2])
                    - (matris[2][0] * matris[1][1] * matris[0][4] * matris[3][2] * matris[4][3])
                    + (matris[2][0] * matris[1][1] * matris[0][4] * matris[3][3] * matris[4][2])
                    + (matris[2][0] * matris[1][1] * matris[0][3] * matris[3][2] * matris[4][4])
                    + (matris[2][0] * matris[1][1] * matris[0][2] * matris[3][4] * matris[4][3])
                    + (matris[2][0] * matris[3][1] * matris[0][2] * matris[1][3] * matris[4][4])
                    + (matris[2][0] * matris[3][1] * matris[0][3] * matris[1][4] * matris[4][2])
                    + (matris[2][0] * matris[3][1] * matris[0][4] * matris[1][2] * matris[4][3])
                    - (matris[2][0] * matris[3][1] * matris[0][4] * matris[1][3] * matris[4][2])
                    - (matris[2][0] * matris[3][1] * matris[0][3] * matris[1][2] * matris[4][4])
                    - (matris[2][0] * matris[3][1] * matris[0][2] * matris[1][4] * matris[4][3])
                    - (matris[2][0] * matris[4][1] * matris[0][2] * matris[1][3] * matris[3][4])
                    - (matris[2][0] * matris[4][1] * matris[0][3] * matris[1][4] * matris[3][2])
                    - (matris[2][0] * matris[4][1] * matris[0][4] * matris[1][2] * matris[3][3])
                    + (matris[2][0] * matris[4][1] * matris[0][4] * matris[1][3] * matris[3][2])
                    + (matris[2][0] * matris[4][1] * matris[0][3] * matris[1][2] * matris[3][4])
                    + (matris[2][0] * matris[4][1] * matris[0][2] * matris[1][4] * matris[3][3])
                    ////////////////////////////////////////////////////////////////////////////
                    - (matris[3][0] * matris[0][1] * matris[1][2] * matris[2][3] * matris[4][4])
                    - (matris[3][0] * matris[0][1] * matris[1][3] * matris[2][4] * matris[4][2])
                    - (matris[3][0] * matris[0][1] * matris[1][4] * matris[2][2] * matris[4][3])
                    + (matris[3][0] * matris[0][1] * matris[1][4] * matris[2][3] * matris[4][2])
                    + (matris[3][0] * matris[0][1] * matris[1][3] * matris[2][2] * matris[4][4])
                    + (matris[3][0] * matris[0][1] * matris[1][2] * matris[2][4] * matris[4][3])
                    + (matris[3][0] * matris[1][1] * matris[0][2] * matris[2][3] * matris[4][4])
                    + (matris[3][0] * matris[1][1] * matris[0][3] * matris[2][4] * matris[4][2])
                    + (matris[3][0] * matris[1][1] * matris[0][4] * matris[2][2] * matris[4][3])
                    - (matris[3][0] * matris[1][1] * matris[0][4] * matris[2][3] * matris[4][2])
                    - (matris[3][0] * matris[1][1] * matris[0][3] * matris[2][2] * matris[4][4])
                    - (matris[3][0] * matris[1][1] * matris[0][2] * matris[2][4] * matris[4][3])
                    - (matris[3][0] * matris[2][1] * matris[0][2] * matris[1][3] * matris[4][4])
                    - (matris[3][0] * matris[2][1] * matris[0][3] * matris[1][4] * matris[4][2])
                    - (matris[3][0] * matris[2][1] * matris[0][4] * matris[1][2] * matris[4][3])
                    + (matris[3][0] * matris[2][1] * matris[0][4] * matris[1][3] * matris[4][2])
                    + (matris[3][0] * matris[2][1] * matris[0][3] * matris[1][2] * matris[4][4])
                    + (matris[3][0] * matris[2][1] * matris[0][2] * matris[1][4] * matris[4][3])
                    + (matris[3][0] * matris[4][1] * matris[0][2] * matris[1][3] * matris[2][4])
                    + (matris[3][0] * matris[4][1] * matris[0][3] * matris[1][4] * matris[2][2])
                    + (matris[3][0] * matris[4][1] * matris[0][4] * matris[1][2] * matris[2][3])
                    - (matris[3][0] * matris[4][1] * matris[0][4] * matris[1][3] * matris[2][2])
                    - (matris[3][0] * matris[4][1] * matris[0][3] * matris[1][2] * matris[2][4])
                    - (matris[3][0] * matris[4][1] * matris[0][2] * matris[1][4] * matris[2][3])
                    ////////////////////////////////////////////////////////////////////////////
                    + (matris[4][0] * matris[0][1] * matris[1][2] * matris[2][3] * matris[3][4])
                    + (matris[4][0] * matris[0][1] * matris[1][3] * matris[2][4] * matris[3][2])
                    + (matris[4][0] * matris[0][1] * matris[1][4] * matris[2][2] * matris[3][3])
                    - (matris[4][0] * matris[0][1] * matris[1][4] * matris[2][3] * matris[3][2])
                    - (matris[4][0] * matris[0][1] * matris[1][3] * matris[2][2] * matris[3][4])
                    - (matris[4][0] * matris[0][1] * matris[1][2] * matris[2][4] * matris[3][3])
                    - (matris[4][0] * matris[1][1] * matris[0][2] * matris[2][3] * matris[3][4])
                    - (matris[4][0] * matris[1][1] * matris[0][3] * matris[2][4] * matris[3][2])
                    - (matris[4][0] * matris[1][1] * matris[0][4] * matris[2][2] * matris[3][3])
                    + (matris[4][0] * matris[1][1] * matris[0][4] * matris[2][3] * matris[3][2])
                    + (matris[4][0] * matris[1][1] * matris[0][3] * matris[2][2] * matris[3][4])
                    + (matris[4][0] * matris[1][1] * matris[0][2] * matris[2][4] * matris[3][3])
                    + (matris[4][0] * matris[2][1] * matris[0][2] * matris[1][3] * matris[3][4])
                    + (matris[4][0] * matris[2][1] * matris[0][3] * matris[1][4] * matris[3][2])
                    + (matris[4][0] * matris[2][1] * matris[0][4] * matris[1][2] * matris[3][3])
                    - (matris[4][0] * matris[2][1] * matris[0][4] * matris[1][3] * matris[3][2])
                    - (matris[4][0] * matris[2][1] * matris[0][3] * matris[1][2] * matris[3][4])
                    - (matris[4][0] * matris[2][1] * matris[0][2] * matris[1][4] * matris[3][3])
                    - (matris[4][0] * matris[3][1] * matris[0][2] * matris[1][3] * matris[2][4])
                    - (matris[4][0] * matris[3][1] * matris[0][3] * matris[1][4] * matris[2][2])
                    - (matris[4][0] * matris[3][1] * matris[0][4] * matris[1][2] * matris[2][3])
                    + (matris[4][0] * matris[3][1] * matris[0][4] * matris[1][3] * matris[2][2])
                    + (matris[4][0] * matris[3][1] * matris[0][3] * matris[1][2] * matris[2][4])
                    + (matris[4][0] * matris[3][1] * matris[0][2] * matris[1][4] * matris[2][3]);
            toplama_sayisi = toplama_sayisi + 119;
            carpma_sayisi = carpma_sayisi + 460;
        }
        return sonuc;
    }

    public boolean bosKontrol(int satir, int sutun) {
        if (satir == 1 && sutun == 2) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 1 && sutun == 3) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 1 && sutun == 4) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 1 && sutun == 5) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_4.getText().trim().isEmpty() == true) {
                return false;
            }
        } //////////////////////////////////////
        else if (satir == 2 && sutun == 1) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 2 && sutun == 3) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 2 && sutun == 4) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 2 && sutun == 5) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_4.getText().trim().isEmpty() == true) {
                return false;
            }
        } //////////////////////////////////////
        else if (satir == 3 && sutun == 1) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 3 && sutun == 2) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 3 && sutun == 4) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_3.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 3 && sutun == 5) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_4.getText().trim().isEmpty() == true) {
                return false;
            }
        } //////////////////////////////////////
        else if (satir == 4 && sutun == 1) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 4 && sutun == 2) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 4 && sutun == 3) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_2.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 4 && sutun == 5) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_4.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_4.getText().trim().isEmpty() == true) {
                return false;
            }
        } //////////////////////////////////////
        else if (satir == 5 && sutun == 1) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_0.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 5 && sutun == 2) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_1.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 5 && sutun == 3) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_2.getText().trim().isEmpty() == true) {
                return false;
            }
        } else if (satir == 5 && sutun == 4) {
            if (jTextField0_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_0.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_1.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_2.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField0_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField1_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField2_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField3_3.getText().trim().isEmpty() == true) {
                return false;
            }
            if (jTextField4_3.getText().trim().isEmpty() == true) {
                return false;
            }
        }
        return true;
    }

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        jRadioButton1.setSelected(false);
        jLabel4.setVisible(false);
        jButton4.setVisible(false);
        jTextField26.setVisible(false);
        kareleriKapatma();
        rastgeleormanual = 100;

        jLabel5.setVisible(true);
        jLabel6.setVisible(true);
        jTextField1.setVisible(true);
        jTextField2.setVisible(true);
        jButton3.setVisible(true);
        jLabel7.setVisible(true);

    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jTextField26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField26ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        boolean kont;
        kont = kontrol();

        if (kont == true) {
            int satir, sutun;
            kareleriAcma();
            erisimIzniAcma();

            satir = Integer.parseInt(jTextField1.getText());
            sutun = Integer.parseInt(jTextField2.getText());
            ozelKapatma(satir, sutun);

            jTextField26.setVisible(true);
            jTextField26.setText(" " + satir + " " + "x" + " " + sutun + " ");
            jTextField26.setEnabled(false);
            jLabel4.setText("boyut");
            jLabel4.setVisible(true);
            jButton1.setVisible(true);
            jLabel8.setVisible(true);
            jButton1.setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BaslangicEkrani be5 = new BaslangicEkrani();
        this.setVisible(false);
        be5.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int satir = Integer.parseInt(jTextField1.getText());
        int sutun = Integer.parseInt(jTextField2.getText());
        boolean kntrl = sayiKontrol();
        boolean kntrl2 = bosKontrol(satir, sutun);

        if (kntrl2 == false) {
            JOptionPane.showMessageDialog(null, "Sectiginiz satir ve sutunlara gore kutucukları doldurun.");
        }

        if (kntrl == true && kntrl2 == true) {
            if (jTextField0_0.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField0_0.getText().trim(), 0, 0) == true) {
                matris[0][0] = Double.parseDouble(jTextField0_0.getText().trim());
            }
            if (jTextField0_1.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField0_1.getText().trim(), 0, 1) == true) {
                matris[0][1] = Double.parseDouble(jTextField0_1.getText().trim());
            }
            if (jTextField0_2.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField0_2.getText().trim(), 0, 2) == true) {
                matris[0][2] = Double.parseDouble(jTextField0_2.getText().trim());
            }
            if (jTextField0_3.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField0_3.getText().trim(), 0, 3) == true) {
                matris[0][3] = Double.parseDouble(jTextField0_3.getText().trim());
            }
            if (jTextField0_4.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField0_4.getText().trim(), 0, 4) == true) {
                matris[0][4] = Double.parseDouble(jTextField0_4.getText().trim());
            }
            //////////////////////////////////////////////////////////////////////
            if (jTextField1_0.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField1_0.getText().trim(), 1, 0) == true) {
                matris[1][0] = Double.parseDouble(jTextField1_0.getText().trim());
            }
            if (jTextField1_1.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField1_1.getText().trim(), 1, 1) == true) {
                matris[1][1] = Double.parseDouble(jTextField1_1.getText().trim());
            }
            if (jTextField1_2.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField1_2.getText().trim(), 1, 2) == true) {
                matris[1][2] = Double.parseDouble(jTextField1_2.getText().trim());
            }
            if (jTextField1_3.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField1_3.getText().trim(), 1, 3) == true) {
                matris[1][3] = Double.parseDouble(jTextField1_3.getText().trim());
            }
            if (jTextField1_4.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField1_4.getText().trim(), 1, 4) == true) {
                matris[1][4] = Double.parseDouble(jTextField1_4.getText().trim());
            }
            //////////////////////////////////////////////////////////////////////
            if (jTextField2_0.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField2_0.getText().trim(), 2, 0) == true) {
                matris[2][0] = Double.parseDouble(jTextField2_0.getText().trim());
            }
            if (jTextField2_1.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField2_1.getText().trim(), 2, 1) == true) {
                matris[2][1] = Double.parseDouble(jTextField2_1.getText().trim());
            }
            if (jTextField2_2.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField2_2.getText().trim(), 2, 2) == true) {
                matris[2][2] = Double.parseDouble(jTextField2_2.getText().trim());
            }
            if (jTextField2_3.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField2_3.getText().trim(), 2, 3) == true) {
                matris[2][3] = Double.parseDouble(jTextField2_3.getText().trim());
            }
            if (jTextField2_4.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField2_4.getText().trim(), 2, 4) == true) {
                matris[2][4] = Double.parseDouble(jTextField2_4.getText().trim());
            }
            /////////////////////////////////////////////////////////////////////
            if (jTextField3_0.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField3_0.getText().trim(), 3, 0) == true) {
                matris[3][0] = Double.parseDouble(jTextField3_0.getText().trim());
            }
            if (jTextField3_1.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField3_1.getText().trim(), 3, 1) == true) {
                matris[3][1] = Double.parseDouble(jTextField3_1.getText().trim());
            }
            if (jTextField3_2.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField3_2.getText().trim(), 3, 2) == true) {
                matris[3][2] = Double.parseDouble(jTextField3_2.getText().trim());
            }
            if (jTextField3_3.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField3_3.getText().trim(), 3, 3) == true) {
                matris[3][3] = Double.parseDouble(jTextField3_3.getText().trim());
            }
            if (jTextField3_4.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField3_4.getText().trim(), 3, 4) == true) {
                matris[3][4] = Double.parseDouble(jTextField3_4.getText().trim());
            }
            ////////////////////////////////////////////////////////////////////
            if (jTextField4_0.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField4_0.getText().trim(), 4, 0) == true) {
                matris[4][0] = Double.parseDouble(jTextField4_0.getText().trim());
            }
            if (jTextField4_1.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField4_1.getText().trim(), 4, 1) == true) {
                matris[4][1] = Double.parseDouble(jTextField4_1.getText().trim());
            }
            if (jTextField4_2.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField4_2.getText().trim(), 4, 2) == true) {
                matris[4][2] = Double.parseDouble(jTextField4_2.getText().trim());
            }
            if (jTextField4_3.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField4_3.getText().trim(), 4, 3) == true) {
                matris[4][3] = Double.parseDouble(jTextField4_3.getText().trim());
            }
            if (jTextField4_4.getText().trim().isEmpty() == false && sayiAralikKontrol(jTextField4_4.getText().trim(), 4, 4) == true) {
                matris[4][4] = Double.parseDouble(jTextField4_4.getText().trim());
            }

            Double[][] matrix = new Double[satir][sutun];
            for (int i = 0; i < satir; i++) {
                for (int j = 0; j < sutun; j++) {
                    if (matris[i][j] != null) {
                        matrix[i][j] = matris[i][j];
                    }
                }
            }

            int deneme = 1; //baslangic deger
            Double[][] transmatrix = new Double[satir][sutun]; //Transpoze Bulduk
            transmatrix = matrisTranspozeBulma(matrix, satir, sutun);

            Double[][] sonucmatrix = new Double[satir][satir];
            sonucmatrix = multiplicar(matrix, transmatrix); //Transpoze ile matrisi çarptık

            Double[][] tempomatrix = new Double[satir][satir];
            tempomatrix = sonucmatrix;

            if (determinantBulma(sonucmatrix) == 0) {
                sonucmatrix = multiplicar(transmatrix, matrix); //Çarpım sonucu determinant 0 çıkıyorsa
                if (determinantBulma(sonucmatrix) == 0) {
                    deneme = 2; //det = 0 her iki türlü de
                    JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                    System.exit(0);
                } else {
                    deneme = 3; //det bi sonraki aşamada bulundu
                }
            }

            double[][] tempArray = new double[sonucmatrix.length][sonucmatrix[0].length];
            for (int i = 0; i < tempArray.length; i++) {
                for (int j = 0; j < tempArray[0].length; j++) {
                    tempArray[i][j] = sonucmatrix[i][j];
                }
            }

            //ters matrisi Double cevirmek gerekiyor.
            double[][] tersmatrix = matrisTersAlma(tempArray);
            Double[][] tersMatrixSonuc = new Double[tersmatrix.length][tersmatrix[0].length];
            for (int i = 0; i < tersmatrix.length; i++) {
                for (int j = 0; j < tersmatrix[0].length; j++) {
                    tersMatrixSonuc[i][j] = tersmatrix[i][j];
                }
            }

            for (int i = 0; i < tersMatrixSonuc.length; i++) {
                for (int j = 0; j < tersMatrixSonuc[0].length; j++) {
                    if (tersMatrixSonuc[i][j].isNaN()) {
                        JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                        System.exit(0);
                    }
                }
            }

            Double[][] sonSonuc = null;
            if (deneme == 1) {
                sonSonuc = multiplicar(transmatrix, tersMatrixSonuc);
                for (int i = 0; i < sonSonuc.length; i++) {
                    for (int j = 0; j < sonSonuc[0].length; j++) {
                        if (sonSonuc[i][j].isNaN()) {
                            JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                            System.exit(0);
                        }
                    }
                }
                RastgeleOlusanMatris rom = new RastgeleOlusanMatris(matrix, transmatrix, sonucmatrix, tersMatrixSonuc, sonSonuc, toplama_sayisi, carpma_sayisi);
                rom.setVisible(true);
                this.setVisible(false);
            } else if (deneme == 2) {

            } else if (deneme == 3) {
                sonSonuc = multiplicar(tersMatrixSonuc, transmatrix);
                for (int i = 0; i < sonSonuc.length; i++) {
                    for (int j = 0; j < sonSonuc[0].length; j++) {
                        if (sonSonuc[i][j].isNaN()) {
                            JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                            System.exit(0);
                        }
                    }
                }
                RastgelePencere roms = new RastgelePencere(matrix, transmatrix, tempomatrix, sonucmatrix, tersMatrixSonuc, sonSonuc, toplama_sayisi, carpma_sayisi);
                roms.setVisible(true);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int en_yuksek_i = -1;
        int en_yuksek_j = -1;
        for (int i = 0; i < matris.length; i++) {
            for (int j = 0; j < matris[0].length; j++) {
                if (matris[i][j] != null) {
                    if (i > en_yuksek_i) {
                        en_yuksek_i = i;
                    }
                    if (j > en_yuksek_j) {
                        en_yuksek_j = j;
                    }
                }
            }
        }

        Double[][] matrix = new Double[en_yuksek_i + 1][en_yuksek_j + 1];
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                matrix[i][j] = matris[i][j];
            }
        }

        int deneme = 1; //baslangic deger

        Double[][] transmatrix = new Double[matrix.length][matrix[0].length]; //Transpoze Bulduk
        transmatrix = matrisTranspozeBulma(matrix, matrix.length, matrix[0].length);

        Double[][] sonucmatrix = new Double[matrix.length][matrix.length];
        sonucmatrix = multiplicar(matrix, transmatrix); //Transpoze ile matrisi çarptık

        Double[][] tempomatrix = new Double[matrix.length][matrix.length];
        tempomatrix = sonucmatrix;

        if (determinantBulma(sonucmatrix) == 0) {
            sonucmatrix = multiplicar(transmatrix, matrix); //Çarpım sonucu determinant 0 çıkıyorsa
            if (determinantBulma(sonucmatrix) == 0) {
                deneme = 2; //det = 0 her iki türlü de
                JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                System.exit(0);
            } else {
                deneme = 3; //det bi sonraki aşamada bulundu
            }
        }

        double[][] tempArray = new double[sonucmatrix.length][sonucmatrix[0].length];
        for (int i = 0; i < tempArray.length; i++) {
            for (int j = 0; j < tempArray[0].length; j++) {
                tempArray[i][j] = sonucmatrix[i][j];
            }
        }

        //ters matrisi Double cevirmek gerekiyor.
        double[][] tersmatrix = matrisTersAlma(tempArray);
        Double[][] tersMatrixSonuc = new Double[tersmatrix.length][tersmatrix[0].length];
        for (int i = 0; i < tersmatrix.length; i++) {
            for (int j = 0; j < tersmatrix[0].length; j++) {
                tersMatrixSonuc[i][j] = tersmatrix[i][j];
            }
        }

        for (int i = 0; i < tersMatrixSonuc.length; i++) {
            for (int j = 0; j < tersMatrixSonuc[0].length; j++) {
                if (tersMatrixSonuc[i][j].isNaN()) {
                    JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                    System.exit(0);
                }
            }
        }

        Double[][] sonSonuc = null;
        if (deneme == 1) {
            sonSonuc = multiplicar(transmatrix, tersMatrixSonuc);

            for (int i = 0; i < sonSonuc.length; i++) {
                for (int j = 0; j < sonSonuc[0].length; j++) {
                    if (sonSonuc[i][j].isNaN()) {
                        JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                        System.exit(0);
                    }
                }
            }

            RastgeleOlusanMatris rom = new RastgeleOlusanMatris(matrix, transmatrix, sonucmatrix, tersMatrixSonuc, sonSonuc, toplama_sayisi, carpma_sayisi);
            rom.setVisible(true);
            this.setVisible(false);
        } else if (deneme == 2) {
            JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
            System.exit(0);
        } else if (deneme == 3) {
            sonSonuc = multiplicar(tersMatrixSonuc, transmatrix);
            RastgelePencere roms = new RastgelePencere(matrix, transmatrix, tempomatrix, sonucmatrix, tersMatrixSonuc, sonSonuc, toplama_sayisi, carpma_sayisi);
            for (int i = 0; i < sonSonuc.length; i++) {
                for (int j = 0; j < sonSonuc[0].length; j++) {
                    if (sonSonuc[i][j].isNaN()) {
                        JOptionPane.showMessageDialog(null, "Maalesef determinant sonucundan dolayı bu matrisin sahte tersi alınamıyor.");
                        System.exit(0);
                    }
                }
            }
            roms.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaslangicEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaslangicEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaslangicEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaslangicEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaslangicEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTextField jTextField0_0;
    private javax.swing.JTextField jTextField0_1;
    private javax.swing.JTextField jTextField0_2;
    private javax.swing.JTextField jTextField0_3;
    private javax.swing.JTextField jTextField0_4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1_0;
    private javax.swing.JTextField jTextField1_1;
    private javax.swing.JTextField jTextField1_2;
    private javax.swing.JTextField jTextField1_3;
    private javax.swing.JTextField jTextField1_4;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField2_0;
    private javax.swing.JTextField jTextField2_1;
    private javax.swing.JTextField jTextField2_2;
    private javax.swing.JTextField jTextField2_3;
    private javax.swing.JTextField jTextField2_4;
    private javax.swing.JTextField jTextField3_0;
    private javax.swing.JTextField jTextField3_1;
    private javax.swing.JTextField jTextField3_2;
    private javax.swing.JTextField jTextField3_3;
    private javax.swing.JTextField jTextField3_4;
    private javax.swing.JTextField jTextField4_0;
    private javax.swing.JTextField jTextField4_1;
    private javax.swing.JTextField jTextField4_2;
    private javax.swing.JTextField jTextField4_3;
    private javax.swing.JTextField jTextField4_4;
    // End of variables declaration//GEN-END:variables
}
